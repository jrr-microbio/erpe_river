#NMDS for continuous variables
#This does not work well with NA values.

library(ggplot2)
library(vegan)
library(grid)
library(MASS)
library(RColorBrewer)
library(purrr)
library(dplyr)
library(tidyr)
library(plotly)
library(htmlwidgets)
library(mds)
library(ggdark)
library(tidyverse)

##read in feature table with species as columns and samples as rows
virgenome<-read.csv('/Volumes/GoogleDrive/My Drive/University/Wrighton Lab; PhD/ERPE_Timeseries_viral_communities/viral_work/read_mapping/95ID_noambig_filtered/1246_vMAGs_75AF_3xcov_counts_TMM_normalized_noambig_PWSW_sep_25_sample_forNMDS.csv', header=T,check.names=TRUE, row.names = 1)

##read in chemistry (nona)
chem = read.csv('/Volumes/GoogleDrive/My Drive/University/Wrighton Lab; PhD/ERPE_Timeseries_viral_communities/microbial_work/read_mapping/95ID_noambig_filtered/25_sample_metadata_for_NMDS_with_timepoint.csv', sep = ',', header = TRUE, check.names = T)
rownames(chem)=chem[,1]
chem = chem[,-1]

#chemnum=chem[,2:16]
log_chem=log(chem[,15:29])
#sqrt_chem=sqrt(chem[,3:30])

chem$SRP <- as.character(log_chem$SRP)
chem$NH4N <- as.character(log_chem$NH4N)
chem$NO3N <- as.character(log_chem$NO3N)
chem$DOC <- as.character(log_chem$DOC)
chem$DIC <- as.character(log_chem$DIC)
chem$Cl <- as.character(log_chem$Cl)
chem$SO42 <- as.character(log_chem$SO42)
chem$B <- as.character(log_chem$B)
chem$Ca <- as.character(log_chem$Ca)
chem$Fe <- as.character(log_chem$Fe)
chem$K <- as.character(log_chem$K)
chem$Mg <- as.character(log_chem$Mg)
chem$Na <- as.character(log_chem$Na)
chem$TN <- as.character(log_chem$TN)
chem$pH <- as.character(log_chem$pH)
chem$sw_pw[which(chem$sw_pw=="pw")] <- "1"
chem$sw_pw[which(chem$sw_pw=="sw")] <- "2"
chem$timepoint=factor(chem$timepoint)

####Simple Ord with env factors
chem.pca_log<-prcomp(na.omit(log_chem), center=TRUE, scale.=TRUE)
ordvir<-metaMDS(virgenome, distance = "bray")
fit_logvir <- envfit(ordvir, log_chem, perm = 999, na.rm=TRUE)
scores(fit_logvir, "vectors")
plot(ordvir)
plot(fit_logvir)
plot(fit_logvir, p.max = 0.05, col = "green")

#This establishes the coordinates for the samples and all OTUS onto an non-metric dimensional scaling
Ord_dist <-metaMDSdist(virgenome, distance = "bray", noshare = 0.1, trace = 1, autotransform=T)

#Run mrpp and ANOSIM on Depth between samples
mrpp(virgenome, chem$sw_pw, permutations=999, distance="bray")
anosim(Ord_dist, chem$sw_pw, permutations = 999)

##Now to work on plotting the NMDS in 2D (k = 3 gives 3D)
NMDS_Bray_virgenome <-metaMDS(virgenome, distance = "bray", k =2,
                          noshare = 0.1, trace = 1, trymax = 500, autotransform=T)
ord.virgenome = as.data.frame(scores(NMDS_Bray_virgenome), display="sites")
ord.virgenome$sampleid=row.names(ord.virgenome)

stressplot(NMDS_Bray_virgenome)
#autoplot(NMDS_Bray_virgenome)

#############Now to plot on GGPLOT to make it look way better.
#Pull out the ordination scores to plot from the log transformed values.
ord.scrs<-as.data.frame(scores(NMDS_Bray_virgenome),display="sites")
fit.scrs_log<-as.data.frame(scores(fit_logvir,display="vectors"))
Species<-rownames(fit.scrs_log)
fit.scrs_log<-cbind(fit.scrs_log,Species)

sw_pw<-ggplot(ord.scrs)+geom_point(mapping = aes(x = NMDS1, y = NMDS2, shape=chem$sw_pw, color=chem$timepoint), size=11)
plot=sw_pw+ggtitle('Viruses pore / surface across time')+theme(plot.title = element_text(hjust = 0.5))+scale_color_manual(values=c("#8F153A", "#CB3646", "#EE623A", "#D87714", "#F9A056", "#F8C694", "#FAD77F", "#FFFAB3","#9EF89E", "#6AC96E", "#4AAF54", "#229638", "#027D18", "#006600", "#004B00", "#013300"))
plot

####Now we want to computationally add in some ellipses for the 95% confidence intervals of the plots.
NMDS_ord=data.frame(MDS1=ord.scrs$NMDS1, MDS2=ord.scrs$NMDS2, group=chem$sw_pw)
NMDS_ord_mean=aggregate(NMDS_ord[,1:2],list(group=NMDS_ord$group),"mean")
NMDS_ord$group=as.factor(NMDS_ord$group)

veganCovEllipse=function (cov, center = c(0, 0), scale = 1.5, npoints = 300) 
{
  theta <- (0:npoints) * 2 * pi/npoints
  Circle <- cbind(cos(theta), sin(theta))
  t(center + scale * t(Circle %*% chol(cov)))
}

df_ell <- data.frame()
for(g in levels(NMDS_ord$group)){
  df_ell <- rbind(df_ell, cbind(as.data.frame(with(NMDS_ord[NMDS_ord$group==g,],veganCovEllipse(cov.wt(cbind(MDS1,MDS2),wt=rep(1/length(MDS1),length(MDS1)))$cov,center=c(mean(MDS1),mean(MDS2))))),group=g))
}

sw_pw_ellipse=ggplot(NMDS_ord)+geom_point(mapping = aes(x = MDS1, y = MDS2, shape=chem$sw_pw, color=chem$timepoint), size=11)+scale_color_manual(values=c("#8F153A", "#CB3646", "#EE623A", "#D87714", "#F9A056", "#F8C694", "#FAD77F", "#FFFAB3","#9EF89E", "#6AC96E", "#4AAF54", "#229638", "#027D18", "#006600", "#004B00", "#013300"))

#The color struggles because it does not really know how to subset the timescale shades and the ellipse shades. So I just make it with random colors, and pull the ellipses out using Illustrator and overlay it on the actual NMDS plot.
plot=sw_pw_ellipse+theme(plot.title = element_text(hjust = 0.5))+geom_path(data=df_ell, aes(x=MDS1, y=MDS2,colour=group), size=1, linetype=2)+annotate("text",x=NMDS_ord_mean$MDS1,y=NMDS_ord_mean$MDS2,label=NMDS_ord_mean$group)+scale_color_manual(values=c("#8F153A", "#CB3646", "#EE623A", "#D87714", "#F9A056", "#F8C694", "#FAD77F", "#FFFAB3","#9EF89E", "#6AC96E", "#4AAF54", "#229638", "#027D18", "#006600", "#004B00", "#013300","black","black"))
plot


###Working on identifying ordination drivers and whether time relates to them.
chem_join=rownames_to_column(chem, "sample-id")

ord.scrs_chem=ord.scrs %>% 
  rownames_to_column("sample-id") %>%
  left_join(chem_join) %>%
  mutate_at("timepoint", as.numeric)

ord.scrs_chem_pw=ord.scrs_chem %>%
  filter(sw_pw==1)
ord.scrs_chem_sw=ord.scrs_chem %>%
  filter(sw_pw==2)

cor.test(ord.scrs_chem_sw$NMDS1, ord.scrs_chem_sw$timepoint,method="spearman")
cor.test(ord.scrs_chem_sw$NMDS2, ord.scrs_chem_sw$timepoint,method="spearman")
cor.test(ord.scrs_chem_pw$NMDS1, ord.scrs_chem_pw$timepoint,method="spearman")
cor.test(ord.scrs_chem_pw$NMDS2, ord.scrs_chem_pw$timepoint,method="spearman")

##Begin Ordination of PW only  - because from original ordination, we could see that surfacewater was being collapses very much, and we were looking for explanation of above.
virgenome_pw=virgenome %>%
  rownames_to_column("sample-id") %>%
  filter(`sample-id` %in% ord.scrs_chem_pw$`sample-id`)

chem_pw=chem %>%
  rownames_to_column("sample-id") %>%
  filter(`sample-id` %in% ord.scrs_chem_pw$`sample-id`)

virgenome_pw_nmds=column_to_rownames(virgenome_pw, "sample-id")
NMDS_Bray_virgenome_pw <-metaMDS(virgenome_pw_nmds, distance = "bray", k =2,
                              noshare = 0.1, trace = 1, trymax = 500, autotransform=T)
ord.virgenome_pw = as.data.frame(scores(NMDS_Bray_virgenome_pw), display="sites")
ord.virgenome_pw$sampleid=row.names(ord.virgenome_pw)

ord.scrs_pw<-as.data.frame(scores(NMDS_Bray_virgenome_pw),display="sites")

pw<-ggplot(ord.scrs_pw)+geom_point(mapping = aes(x = NMDS1, y = NMDS2, color=chem_pw$timepoint), size=11)

plot_pw=pw+ggtitle('Viruses pore / surface across time')+theme(plot.title = element_text(hjust = 0.5))+scale_color_manual(values=c("#8F153A", "#CB3646", "#EE623A", "#D87714", "#F9A056", "#F8C694", "#FAD77F", "#FFFAB3","#9EF89E", "#6AC96E", "#4AAF54", "#229638", "#027D18", "#006600", "#004B00", "#013300")) #+ stat_ellipse(aes(x=sw_pw$1, y=sw_pw$2))
plot_pw


##Begin Ordination of SW only  - because from original ordination, we could see that surfacewater was being collapses very much, and we were looking for explanation of above.
virgenome_sw=virgenome %>%
  rownames_to_column("sample-id") %>%
  filter(`sample-id` %in% ord.scrs_chem_sw$`sample-id`)

chem_sw=chem %>%
  rownames_to_column("sample-id") %>%
  filter(`sample-id` %in% ord.scrs_chem_sw$`sample-id`)

virgenome_sw_nmds=column_to_rownames(virgenome_sw, "sample-id")
NMDS_Bray_virgenome_sw <-metaMDS(virgenome_sw_nmds, distance = "bray", k =2,
                                 noshare = 0.1, trace = 1, trymax = 500, autotransform=T)
ord.virgenome_sw = as.data.frame(scores(NMDS_Bray_virgenome_sw), display="sites")
ord.virgenome_sw$sampleid=row.names(ord.virgenome_sw)

ord.scrs_sw<-as.data.frame(scores(NMDS_Bray_virgenome_sw),display="sites")

sw<-ggplot(ord.scrs_sw)+geom_point(mapping = aes(x = NMDS1, y = NMDS2, color=chem_sw$timepoint), size=11)

sw

plot_sw=sw+ggtitle('Viruses pore / surface across time')+theme(plot.title = element_text(hjust = 0.5))+scale_color_manual(values=c("#8F153A", "#CB3646", "#EE623A", "#D87714", "#F9A056", "#F8C694", "#FAD77F", "#FFFAB3","#9EF89E", "#6AC96E", "#4AAF54", "#229638", "#027D18", "#006600", "#004B00", "#013300")) #+ stat_ellipse(aes(x=sw_pw$1, y=sw_pw$2))

plot_sw

#We see that the ordinations are so different that they should be plotted individually. So now I'm going to corr test the axes individually.
##Now corr test the pw only:
ord.scrs_chem_pw=ord.scrs_pw %>% 
  rownames_to_column("sample-id") %>%
  left_join(chem_join) %>%
  mutate_at("timepoint", as.numeric)

cor.test(ord.scrs_chem_pw$NMDS1, ord.scrs_chem_pw$timepoint,method="spearman")
cor.test(ord.scrs_chem_pw$NMDS2, ord.scrs_chem_pw$timepoint,method="spearman")

##Now corr test the sw only:

ord.scrs_chem_sw=ord.scrs_sw %>% 
  rownames_to_column("sample-id") %>%
  left_join(chem_join) %>%
  mutate_at("timepoint", as.numeric)

cor.test(ord.scrs_chem_sw$NMDS1, ord.scrs_chem_sw$timepoint,method="spearman")
cor.test(ord.scrs_chem_sw$NMDS2, ord.scrs_chem_sw$timepoint,method="spearman")
